{"version":3,"sources":["components/TodoList/TodoList.tsx","api.ts","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","selectUser","className","map","todo","completed","title","type","onClick","userId","id","get","url","delay","Promise","resolve","setTimeout","then","fetch","res","json","SortType","Loader","TodoModal","selectedUser","useState","user","setUser","useEffect","loadUser","a","userFromServer","href","email","name","TodoFilter","changeFilteredCondition","changeQuery","query","onChange","event","target","value","handleStatusChange","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","App","setTodos","visibleTodos","setVisibleTodos","loading","setLoading","setUserId","selectedTodo","setSelectedTodo","filteredBy","setFilteredBy","setQuery","isUserSelected","loadTodos","todosFromServer","handleFilter","toLowerCase","includes","filter","todoId","usersTodo","find","filterType","input","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.eef119c5.chunk.js","sourcesContent":["import { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectUser: (id: number, todoId: number) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, selectUser }) => (\n\n  <table\n    data-cy=\"listOfTodos\"\n    className=\"table is-narrow is-fullwidth\"\n  >\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          className={todo.completed\n            ? ('has-background-success-light has-text-success')\n            : ('has-background-danger-light has-text-danger')}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">\n            <span className=\"icon is-size-5\">\n              <i className={todo.completed\n                ? ('fas fa-check-square')\n                : ('fas fa-square-xmark')}\n              />\n            </span>\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            {todo.title}\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              className=\"button is-warning\"\n              type=\"button\"\n              onClick={() => {\n                selectUser(todo.userId, todo.id);\n              }}\n            >\n              Show\n              {' '}\n              {todo.userId}\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\nconst BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  return wait(1000)\n    .then(() => fetch(BASE_URL + url))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => {\n  return get<Todo[]>('/todos');\n};\n\nexport const getUser = (userId: number | null) => {\n  return get<User>(`/users/${userId}`);\n};\n","import React from 'react';\n\nenum SortType {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\ntype Props = {\n  changeFilteredCondition: (filterType: string) => void,\n  changeQuery: (input: string) => void,\n  query: string,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  changeFilteredCondition,\n  changeQuery,\n  query,\n}) => {\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeQuery(event.target.value);\n  };\n\n  const handleStatusChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    changeFilteredCondition(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            onChange={(event) => handleStatusChange(event)}\n          >\n            <option value={SortType.ALL}>All</option>\n            <option value={SortType.ACTIVE}>Active</option>\n            <option value={SortType.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"filterByTitle\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            type=\"button\"\n            className=\"delete has-text\"\n            onClick={() => changeQuery('')}\n          />\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo?: Todo,\n  selectedUser: number | null,\n  selectUser: (id: number, todoId: number) => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo,\n  selectedUser,\n  selectUser,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    const loadUser = async () => {\n      const userFromServer = await getUser(selectedUser);\n\n      setUser(userFromServer);\n    };\n\n    loadUser();\n  }, []);\n\n  return (\n    <div className=\"modal is-active\">\n      <div className=\"modal-background\" />\n\n      {!user\n        ? <Loader />\n        : (\n          <div className=\"modal-card\">\n            <header className=\"modal-card-head\">\n              <div className=\"modal-card-title has-text-weight-medium\">\n                {`Todo #${todo?.id}`}\n              </div>\n\n              <a\n                href=\"#close\"\n                className=\"delete\"\n                onClick={() => selectUser(0, 0)}\n              >\n                Close\n              </a>\n            </header>\n\n            <div className=\"modal-card-body\">\n              <p className=\"block\">{todo?.title}</p>\n\n              <p className=\"block\">\n                {\n                  todo?.completed\n                    ? <strong className=\"has-text-success\">Done</strong>\n                    : <strong className=\"has-text-danger\">Planned</strong>\n                }\n                {' by '}\n                <a href={`mailto:${user.email}`}>\n                  {user.name}\n                </a>\n              </p>\n            </div>\n          </div>\n        )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { TodoFilter } from './components/TodoFilter';\n\nenum SortType {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n\nconst App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>(todos);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [userId, setUserId] = useState<number>(0);\n  const [selectedTodo, setSelectedTodo] = useState<number>(0);\n  const [filteredBy, setFilteredBy] = useState<string>(SortType.ALL);\n  const [query, setQuery] = useState<string>('');\n  const [selectedUser, isUserSelected] = useState<boolean>(false);\n\n  useEffect(() => {\n    const loadTodos = async () => {\n      const todosFromServer = await getTodos();\n\n      setLoading(true);\n      setTodos(todosFromServer);\n      setVisibleTodos(todosFromServer);\n    };\n\n    loadTodos();\n    setLoading(false);\n  }, []);\n\n  const changeFilteredBy = (filterType: string) => {\n    setFilteredBy(filterType);\n  };\n\n  const changeQuery = (input: string) => {\n    setQuery(input);\n  };\n\n  const handleFilter = (title: string) => {\n    return title.toLowerCase().includes(query.toLowerCase());\n  };\n\n  useEffect(() => {\n    switch (filteredBy) {\n      case SortType.ALL:\n        setVisibleTodos(todos.filter(todo => handleFilter(todo.title)));\n        break;\n\n      case SortType.ACTIVE:\n        setVisibleTodos(todos.filter(todo => !todo.completed\n          && handleFilter(todo.title)));\n        break;\n\n      case SortType.COMPLETED:\n        setVisibleTodos(todos.filter(todo => todo.completed\n          && handleFilter(todo.title)));\n        break;\n\n      default:\n        break;\n    }\n  }, [filteredBy, query]);\n\n  const selectUser = (id: number, todoId: number) => {\n    setUserId(id);\n    isUserSelected(!selectedUser);\n    setSelectedTodo(todoId);\n  };\n\n  const usersTodo = todos.find(todo => todo.id === selectedTodo);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n\n            {!loading ? <Loader /> : (\n              <>\n                <h1 className=\"title\">{`Todos: ${filteredBy}`}</h1>\n\n                <div className=\"block\">\n                  <TodoFilter\n                    changeFilteredCondition={changeFilteredBy}\n                    changeQuery={changeQuery}\n                    query={query}\n                  />\n                </div>\n\n                <div className=\"block\">\n                  <TodoList\n                    todos={visibleTodos}\n                    selectUser={selectUser}\n                  />\n                </div>\n              </>\n            )}\n          </div>\n        </div>\n      </div>\n\n      {selectedUser && (\n        <TodoModal\n          todo={usersTodo}\n          selectedUser={userId}\n          selectUser={selectUser}\n        />\n      )}\n    </>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport './general.scss';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}